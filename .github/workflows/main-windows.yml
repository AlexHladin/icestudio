name: 'Icestudio for Windows'

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
     
      # Checkout the develop branch
      - uses: actions/checkout@v2
        with:
          ref: develop
      
      - name: Setup Nodejs version
        uses: actions/setup-node@v1
        with:
          node-version: '17.3.0'
      
      - name: Install npm dependencies
        run:   npm install 
      
      # It is necesarry to install wine for building the package for
      # windows. Also it is necesary to download the wine-mono windows
      # installer and install it with wine
      - name: Install dependencies
        run: |
          sudo add-apt-repository universe
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install wine nsis 
          wget https://dl.winehq.org/wine/wine-mono/5.0.0/wine-mono-5.0.0-x86.msi
          export DISPLAY=:0.0
          wine msiexec /i wine-mono-5.0.0-x86.msi
      
      - name: Build Microsoft Windows package
        run: |
          export DISPLAY=:0.0 
          npm run buildWindows
          
        # Loading vars from icestudio package.json
      - id: icestudio_json
        run: |
          content=`cat package.json`
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo "::set-output name=packageJson::$content"
    
      # Timestamp for the build
      - id: build_date
        run: |
          content=`tr '\n' ' ' < app/buildinfo.json`
          echo "::set-output name=buildJson::$content"
          
      - name: 'Upload MSI/win64'
        env:
          ICESTUDIO_VERSION: "${{fromJson(steps.icestudio_json.outputs.packageJson).version}}"
          TIMESTAMP: "${{fromJson(steps.build_date.outputs.buildJson).ts}}"
        uses: 'actions/upload-artifact@v2'
        with:
          name: "win64_MSI_${{env.ICESTUDIO_VERSION}}${{env.TIMESTAMP}}"
          path: "dist/icestudio-${{env.ICESTUDIO_VERSION}}${{env.TIMESTAMP}}-win64.exe"
          if-no-files-found: error
          
      - name: 'Upload ZIP/win64'
        env:
          ICESTUDIO_VERSION: "${{fromJson(steps.icestudio_json.outputs.packageJson).version}}"
          TIMESTAMP: "${{fromJson(steps.build_date.outputs.buildJson).ts}}"
        uses: 'actions/upload-artifact@v2'
        with:
          name: "win64_ZIP_${{env.ICESTUDIO_VERSION}}${{env.TIMESTAMP}}"
          path: "dist/icestudio-${{env.ICESTUDIO_VERSION}}${{env.TIMESTAMP}}-win64.zip"
          if-no-files-found: error

